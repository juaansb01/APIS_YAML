openapi: 3.0.1
info:
  title: Documentation Generator
  version: 0.0.1
  description: Generate documentation as a summary of the API from its contract and tests.
  contact:
    name: Alberto Iglesias
    email: aiglesiass@axpe.com
servers:
  - url: '{protocol}://{host}:{port}/{basePath}/{majorVersion}'
    variables:
      protocol:
        description: Protocol.
        default: https
      host:
        description: Host.
        default: localhost
      port:
        description: Port.
        default: '8000'
      basePath:
        description: BasePath.
        default: documentation-generator
      MajorVersion:
        description: MajorVersion.
        default: v0
tags:
  - name: File
    description: Files to be uploaded.
  - name: Documentation
    description: Documentation generated by GPT as the response.
paths:
  /files:
    parameters:
      - $ref: '#/components/parameters/AcceptLanguageHeader'
      - $ref: '#/components/parameters/XRequestIdHeader'
      - name: search
        description: Search a file by some partial content.
        in: header
        schema:
          type: string
          maxLength: 100
    get:
      parameters:
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
      tags:
        - File
      operationId: getListFiles
      summary: List of files.
      description: Return all the files in the system.
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type:  array
                    maxItems: 100
                    items:
                      allOf:
                        - type: object
                          properties:
                            fileId:
                              $ref: '#/components/schemas/FileId'
                        - type: object
                          properties:
                            summary:
                              $ref: '#/components/schemas/Summary'
                        - type: object
                          properties:
                            description:
                              $ref: '#/components/schemas/Description'
                        - type: object
                          properties:
                            typeFile:
                              $ref: '#/components/schemas/TypeFile'
                        - type: object
                          properties:
                            version:
                              $ref: '#/components/schemas/Version'
                        - type: object
                          properties:
                            name:
                              $ref: '#/components/schemas/Name'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        # '404':
        #   $ref: '#/components/responses/404'
        # '500':
        #   $ref: '#/components/responses/500'
    post:
      tags:
        - File
      operationId: postFiles
      summary: Upload files.
      description: Add a new file to the system.
      requestBody:
        $ref: '#/components/requestBodies/FileBody'
      responses:
        '201':
          description: Created.
          headers:
            X-Request-ID:
              $ref: '#/components/headers/XRequestIdHeader'
          content:
            application/json:
              schema:
                type: object
                properties:
                  fileId:
                    $ref: '#/components/schemas/FileId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
           $ref: '#/components/responses/403'
        # '404':
        #   $ref: '#/components/responses/404'
        # '500':
        #   $ref: '#/components/responses/500'
  '/files/{fileId}':
    parameters:
      - $ref: '#/components/parameters/AcceptLanguageHeader'
      - $ref: '#/components/parameters/XRequestIdHeader'
      - $ref: '#/components/parameters/FileId'
    get:
      tags:
        - File
      operationId: getFiles
      summary: Details of one file.
      description: Return all the information about this Identifier.
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type:  object
                    allOf:
                        - type: object
                          properties:
                            fileId:
                              $ref: '#/components/schemas/FileId'
                        - type: object
                          properties:
                            summary:
                              $ref: '#/components/schemas/Summary'
                        - type: object
                          properties:
                            description:
                              $ref: '#/components/schemas/Description'
                        - type: object
                          properties:
                            typeFile:
                              $ref: '#/components/schemas/TypeFile'
                        - type: object
                          properties:
                            version:
                              $ref: '#/components/schemas/Version'
                        - type: object
                          properties:
                            name:
                              $ref: '#/components/schemas/Name'
                        - type: object
                          properties:
                            file:
                              $ref: '#/components/schemas/File'

        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        # '404':
        #   $ref: '#/components/responses/404'
        # '500':
        #   $ref: '#/components/responses/500'
    delete:
      tags:
        - File
      operationId: deleteFiles
      summary: Delete a file.
      description: Delete a file.
      responses:
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        # '404':
        #   $ref: '#/components/responses/404'
        # '500':
        #   $ref: '#/components/responses/500'
  /documentation:
    parameters:
      - $ref: '#/components/parameters/AcceptLanguageHeader'
      - $ref: '#/components/parameters/XRequestIdHeader'
    post:
      tags:
        - Documentation
      operationId: postDocumentation
      summary: Generate the documentation.
      description: Generate the documentation sending the information to GPT.
      requestBody:
        $ref: '#/components/requestBodies/Options'
      responses:
        '201':
          $ref: '#/components/responses/201'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
    get:
      tags:
        - Documentation
      parameters:
      - name: search
        description: Search a file by some partial content.
        in: header
        schema:
          type: string
          maxLength: 100
      - name: documentationType
        description: Search a file by some partial content.
        in: header
        schema:
          type: string
          enum:
            - TECHNICAL
            - FUNCTIONAL
            - BUSINESS
      operationId: getListDocumentation
      summary: Retrieve all documentations of the list
      description: Retrieve all documentation.
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type:  array
                    maxItems: 100
                    items:
                      allOf:
                        - type: object
                          properties:
                            documentationId:
                              $ref: '#/components/schemas/FileId'
                        - type: object
                          properties:
                            documentationType:
                              $ref: '#/components/schemas/DocumentationType'
                        - type: object
                          properties:
                            summary:
                              $ref: '#/components/schemas/Summary'
                        - type: object
                          properties:
                            options:
                              type: array
                              maxItems: 10
                              items:
                                $ref: '#/components/schemas/Options'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
  /documentation/{documentationId}:
    parameters:
      - $ref: '#/components/parameters/AcceptLanguageHeader'
      - $ref: '#/components/parameters/XRequestIdHeader'
      - $ref: '#/components/parameters/DocumentationId'
    get:
      tags:
        - Documentation
      operationId: getDocumentation
      summary: Retrieve all information about one document.
      description: Retrieve all documentation selected.
      responses:
        '200':
          description: ok
          content:
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/File'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
    delete:
      tags:
        - Documentation
      operationId: deleteDocumentation
      summary: Delete the documentation.
      description: Delete the documentation stored in database.
      responses:
        '204':
          description: Not content
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
components:
  schemas:
    TypeFile:
      type: string
      enum:
        - API
        - TEST
        - NOT_APPLY
      default: API
      example: API
    FileId:
      type: string
      format: uuid
      description: Identifier for the files uploaded
      example: 7432470b-681b-498d-94a3-c75040b5af8a
    Version:
      type: string
      maxLength: 5
      example: 0.0.0
    Name:
      type: string
      maxLength: 100
      example: API Documentation
    Summary:
      type: string
      maxLength: 1000
    Description:
      type: string
      maxLength: 1000
    HttpUrl:
      title: HttpUrl
      type: string
      description: Type used for URL addresses.
      pattern: '^(https?:\/\/)?([\w.-]+)(:[0-9]+)?(\/[a-zA-Z0-9/-]*)?(\?[\w=&]*)?$'
    File:
      title: File
      description: Object to upload the .yaml and the .json files.
      type: string
      format: binary
    Context:
      title: Context
      type: string
      description: Brief description of the environment where the API will be used.
      minLength: 1
      maxLength: 2000
    DocumentationType:
      title: documentationType
      description: Brief description of the role to perform by GPT. Affects the language of the documentation generated.
      type: string
      enum:
      - TECHNICAL
      - BUSINESS
      - FUNCTIONAL
    Options:
      title: Options
      description: Documentation deepness required. General summary, brief description of endpoints or extended explanation of endpoints.
      type: string
      enum:
      - SUMMARY
      - LIST_OF_ENDPOINT
      - ALL

    Temperature:
      title: Temperature
      type: number
      format: float
      description: Parameter must be a float number between 0 and 1 to select randomness of the model.
      minimum: 0
      maximum: 1
      default: 0.5

    Pagination:
      title: Pagination
      type: object
      description: Object which contains the pagination data in a Get method.
      properties:
        offset:
          description: 'Record number from which you want to receive the number of records indicated in the limit. If it is indicated at the input, it will be the value of the query. If it is not indicated at the input, since the query is on the first page, its value will be 0.'
          type: integer
          format: int32
          minimum: 0
          maximum: 255
        limit:
          description: 'Number of records returned per page. If specified on entry, it will be the value of the query, otherwise it will be the default value set by the service.'
          type: integer
          format: int32
          minimum: 0
          maximum: 255
        totalPages:
          description: Number of pages for the indicated limit.
          type: integer
          format: int32
          minimum: 0
          maximum: 255
        links:
          description: List of navigation links to different pages.
          type: object
          required:
            - self
          properties:
            first:
              description: |-
                Link to the first page of the list.
                The exact value depends on the data to be accessed.
                The exact content of the page depends on the input parameters provided in the request, such as the offset.
              type: object
              properties:
                href:
                  $ref: '#/components/schemas/HttpUrl'
              maxLength: 255
              pattern: '^\/[\w-]+(\/[\w-]+)*\?(_[a-zA-Z]+=\d*)(&_[a-zA-Z]+=\d*)*'
            self:
              description: |-
                Link to the first page of the list.
                The exact value depends on the data to be accessed.
                The exact content of the page depends on the input parameters provided in the request, such as the offset.
              type: object
              properties:
                href:
                  $ref: '#/components/schemas/HttpUrl'
              maxLength: 255
              pattern: '^\/[\w-]+(\/[\w-]+)*\?(_[a-zA-Z]+=\d*)(&_[a-zA-Z]+=\d*)*'
            prev:
              description: |-
                Link to the previous page of the list.
                The exact value depends on the data to be accessed.
                The exact content of the page depends on the input parameters provided in the request, such as the offset.
              type: object
              properties:
                href:
                  $ref: '#/components/schemas/HttpUrl'
              maxLength: 255
              pattern: '^\/[\w-]+(\/[\w-]+)*\?(_[a-zA-Z]+=\d*)(&_[a-zA-Z]+=\d*)*'
            next:
              description: |-
                Link to the next page of the list.
                The exact value depends on the data to be accessed.
                The exact content of the page depends on the input parameters provided in the request, such as the offset.
              type: object
              properties:
                href:
                  $ref: '#/components/schemas/HttpUrl'
              maxLength: 255
              pattern: '^\/[\w-]+(\/[\w-]+)*\?(_[a-zA-Z]+=\d*)(&_[a-zA-Z]+=\d*)*'
            last:
              description: |-
                Link to the last page of the list.
                The exact value depends on the data to be accessed.
                The exact content of the page depends on the input parameters provided in the request, such as the offset.
              type: object
              properties:
                href:
                  $ref: '#/components/schemas/HttpUrl'
              example:
                last: /accounts?_offset=40&_limit=10
              maxLength: 255
              pattern: '^\/[\w-]+(\/[\w-]+)*\?(_[a-zA-Z]+=\d*)(&_[a-zA-Z]+=\d*)*'
          additionalProperties: false
    ErrorMessage:
      title: ErrorMessage
      type: object
      description: Object returned when an error happens.
      properties:
        messages:
          type: array
          maxItems: 5
          description: List of error messages.
          items:
            type: object
            description: Information of the error produced.
            properties:
              code:
                type: string
                description: Field which briefly defines the problem.
                minLength: 1
                maxLength: 50
              message:
                type: string
                description: Message which describes the main issue.
                minLength: 1
                maxLength: 500
              type:
                type: string
                description: Describes the type of message displayed. CRITICAL- error that prevents the operation of the entire application. FATAL - error that prevents the operation of a specific functionality. ERROR - error that does not affect more features. WARNING - application works but a warning has been generated. INFO - operative info message.
                enum:
                  - CRITICAL
                  - FATAL
                  - ERROR
                  - WARNING
                  - INFO
              description:
                type: string
                description: Describes other details of the error.
                minLength: 1
                maxLength: 500
            required:
              - code
              - message
              - type
  parameters:
    AcceptLanguageHeader:
      name: Accept-Language
      description: ISO code of the language that the client accepts in response from the server.
      in: header
      schema:
        type: string
        pattern: '^[a-z]{2}-[A-Z]{2}$'
        minLength: 1
        maxLength: 6
        example: en-EN
    XRequestIdHeader:
      name: X-Request-ID
      description: Request ID.
      in: header
      schema:
        type: string
        pattern: '^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$'
        format: uuid
        example: 54b9c11c-9162-45a1-a352-0d95734cd079
    Limit:
      name: limit
      description: 'Number of records returned per page. If specified on entry, this will be the value of the query, otherwise it will be the value set by default.'
      in: query
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 10
        format: int32
    Offset:
      name: offset
      description: 'Record number from which you want to receive the number of records indicated in the limit. If it is indicated at the entry, it will be the value of the query. If it is not indicated at the input, as the query is on the first page, its value will be 0.'
      in: query
      required: false
      schema:
        type: integer
        minimum: 0
        maximum: 100
        default: 0
        format: int32
    FileId:
      name: fileId
      description: Id that Identifier the file in the system.
      in: path
      required: true
      schema:
        type: string
        format: uuid
    DocumentationId:
      name: documentationId
      description: Id that Identifies the documentation in the system.
      in: path
      required: true
      schema:
        type: string
        format: uuid
  headers:
    XRequestIdHeader:
      description: Request ID.
      schema:
        type: string
        pattern: '^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$'
        format: uuid
        example: 54b9c11c-9162-45a1-a352-0d95734cd079
  responses:
    '201':
      description: Created.
      headers:
        X-Request-ID:
          $ref: '#/components/headers/XRequestIdHeader'
    '204':
      description: No Content.
      headers:
        X-Request-ID:
          $ref: '#/components/headers/XRequestIdHeader'
    '400':
      description: Bad Request.
      headers:
        X-Request-ID:
          $ref: '#/components/headers/XRequestIdHeader'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          examples:
            err400Example:
              value:
                errors:
                  - code: BAD_REQUEST
                    type: FATAL
                    message: Bad Request
                    description: The request is incorrect because the selected parameters are wrong or a functional error has occurred.
    '401':
      description: Unauthorized.
      headers:
        X-Request-ID:
          $ref: '#/components/headers/XRequestIdHeader'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          examples:
            err401Example:
              value:
                errors:
                  - code: UNAUTHORIZED
                    message: Unauthorized
                    type: ERROR
                    description: The call needs some kind of authorization either expired or not reported.
    '403':
      description: Forbidden.
      headers:
        X-Request-ID:
          $ref: '#/components/headers/XRequestIdHeader'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          examples:
            err403Example:
              value:
                errors:
                  - code: FORBIDDEN
                    type: FATAL
                    message: Forbidden
                    description: You do not have permissions to operate with this invocation.
  requestBodies:
    FileBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            allOf:
              - type: object
                properties:
                  file:
                    $ref: '#/components/schemas/File'
              - type: object
                properties:
                  summary:
                    $ref: '#/components/schemas/Summary'
              - type: object
                properties:
                  description:
                    $ref: '#/components/schemas/Description'
              - type: object
                properties:
                  typeFile:
                    $ref: '#/components/schemas/TypeFile'
              - type: object
                properties:
                  version:
                    $ref: '#/components/schemas/Version'
              - type: object
                properties:
                  name:
                    $ref: '#/components/schemas/Name'
            required:
              - file
              - name
              - typeFile
              - version
    Options:
      required: true
      content:
        application/json:
          schema:
            allOf:
              - type: object
                properties:
                  apiFileId:
                    $ref: '#/components/schemas/File'
              - type: object
                properties:
                  testFileId:
                    $ref: '#/components/schemas/File'
              - type: object
                properties:
                  documentationType:
                    $ref: '#/components/schemas/DocumentationType'
              - type: object
                properties:
                  options:
                    type: array
                    maxItems: 10
                    items:
                      $ref: '#/components/schemas/Options'
              - type: object
                properties:
                  context:
                    $ref: '#/components/schemas/Context'
              - type: object
                properties:
                  temperature:
                    $ref: '#/components/schemas/Temperature'
            required:
              - apiFileId