openapi: 3.0.1
info:
  title: Diagnosis
  version: 0.2.0
  description: The API allows to manipulate the diagnosis of the Alzheimers module. A doctor has the option to edit the diagnosis or the observations about the patients associated to the doctor.
  contact:
    name: Alejandro Paule Pereda
    email: Apaulep@axpe.com
servers:
  - url: '{server}/{basePath}/{MajorVersion}'
    variables:
      server:
        description: 'Host, protocol and port. It refers to the point where the API is deployed.'
        default: 'http://localhost:3000'
      basePath:
        description: API's own basePath through which API resources can be consumed.
        default: diagnosis
      MajorVersion:
        description: Field specifying the major version of the exposed API.
        default: v0
tags:
  - name: Diagnosis
    description: Methods related to operations related to the management of diagnosis of the Alzheimer's Module.
paths:
  /diagnosis:
    parameters:
      - $ref: '#/components/parameters/X-Request-ID'
      - $ref: '#/components/parameters/AcceptLanguageHeader'
    get:
      tags:
        - Diagnosis
      operationId: getDiagnosis
      summary: List of doctor diagnosis
      description: Get the list of all diagnosis done by a doctor.
      parameters:
        - name: patientId
          description: Parameter used to filter diagnosis by the patient they are associated with.
          in: query
          required: true
          schema:
            type: integer
            description: Identifier of the patient the diagnosis is associated with.
            format: int32
            minimum: 1
      responses:
        '200':
          $ref: '#/components/responses/200AllDiagnosis'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '405':
          $ref: '#/components/responses/405'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
    post:
      parameters:
        - $ref: '#/components/parameters/Content-Type'
      tags:
        - Diagnosis
      summary: Create a new diagnosis
      operationId: postDiagnosis
      description: Create a new diagnosis.
      requestBody:
        $ref: '#/components/requestBodies/DiagnosisBody'
      responses:
        '201':
          $ref: '#/components/responses/201'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
components:
  schemas:
    PatientId:
      title: PatientId
      type: object
      description: Object used to represent a patient id in Alzheimer's Module.
      properties:
        patientId:
          type: integer
          format: int64
          description: 'Patient ID, used to uniquely identify a patient of the Alzheimer''s module.'
          minimum: 1
      required:
        - patientId
    Diagnosis:
      title: Diagnosis
      type: object
      description: Object used to represent a diagnosis made on a patient by a doctor.
      allOf:
        - $ref: '#/components/schemas/DiagnosisId'
        - $ref: '#/components/schemas/DiagnosisObject'
      properties:
        prevState:
          type: string
          description: Patient's previous state disease.
          enum:
            - LEVE
            - MODERADO
            - GRAVE
      required:
        - prevState
    DiagnosisId:
      title: DiagnosisId
      type: object
      description: Object used to represent a patient id in Alzheimer's Module.
      properties:
        diagnosisId:
          type: integer
          format: int32
          description: 'Diagnosis ID, used to uniquely identify a diagnosis of the Alzheimer''s module.'
          minimum: 1
      required:
        - diagnosisId
    DiagnosisObject:
      title: DiagnosisObject
      type: object
      description: Object used to represent a diagnosis made on a patient by a doctor.
      allOf:
        - $ref: '#/components/schemas/PatientId'
      properties:
        date:
          type: string
          description: Diagnosis' date.
          format: date
          example: '2021-01-30'
        state:
          type: string
          description: Patient's current disease.
          enum:
            - LEVE
            - MODERADO
            - GRAVE
        comment:
          type: string
          description: Observation about the patient related to the state of the disease in a diagnosis made bya a doctor.
          minLength: 1
          maxLength: 500
      required:
        - state
        - date
    DiagnosisResponse:
      title: DiagnosisResponse
      type: object
      description: Object used to represent the response structure of the diagnosis list.
      properties:
        data:
          description: List of diagnosis.
          type: array
          items:
            $ref: '#/components/schemas/Diagnosis'
          maxItems: 50
    ErrorMessage:
      title: ErrorMessage
      type: object
      description: Object returned when an error happens.
      properties:
        messages:
          type: array
          maxItems: 5
          description: List of error messages.
          items:
            type: object
            description: Information of the error produced.
            properties:
              code:
                type: string
                description: Field which briefly defines the problem.
                minLength: 1
              message:
                type: string
                description: Message which describes the main issue.
                minLength: 1
              type:
                type: string
                description: Describes the type of message displayed. CRITICAL- error that prevents the operation of the entire application. FATAL - error that prevents the operation of a specific functionality. ERROR - error that does not affect more features. WARNING - application works but a warning has been generated. INFO - operative info message.
                minLength: 1
                enum:
                  - CRITICAL
                  - FATAL
                  - ERROR
                  - WARNING
                  - INFO
              description:
                type: string
                description: Describes other details of the error.
            required:
              - code
              - message
              - type
  headers:
    X-Request-ID:
      description: Header used to control the traceability of requests. It consists of an Id in UUID format.
      schema:
        type: string
        pattern: '^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$'
        format: uuid
        example: 54b9c11c-9162-45a1-a352-0d95734cd079
      required: true
    Content-Type:
      description: Header indicating the content of the body provided in the request.
      schema:
        type: string
        pattern: ^application\/json$
        example: application/json
      required: true
    Location:
      description: Header providing information about the url where the new object has been created.
      schema:
        type: string
        pattern: '^http[s]{0,1}://[a-zA-Z./]+'
        maxLength: 200
        example: 'http://example-url/diagnosis/2345523'
  parameters:
    X-Request-ID:
      name: X-Request-ID
      in: header
      required: true
      description: Header used to control the traceability of requests. It consists of an Id in UUID format.
      schema:
        type: string
        pattern: '^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$'
        format: uuid
        example: 54b9c11c-9162-45a1-a352-0d95734cd079
    AcceptLanguageHeader:
      name: Accept-Language
      description: ISO code of the language that the client accepts in response from the server.
      in: header
      required: true
      schema:
        type: string
        pattern: '^[a-z]{2}-[A-Z]{2}$'
        minLength: 1
        example: en-EN
    Content-Type:
      name: Content-Type
      in: header
      required: true
      description: Header indicating the content of the body provided in the request.
      schema:
        type: string
        pattern: ^application\/json$
        example: application/json
  requestBodies:
    DiagnosisBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DiagnosisObject'
          example:
            date: '2021-01-30'
            state: GRAVE
            patientId: 1
            comment: Tratamiento por Apraxia
  responses:
    '201':
      description: Created.
      headers:
        X-Request-ID:
          $ref: '#/components/headers/X-Request-ID'
        Location:
          $ref: '#/components/headers/Location'
    '400':
      description: Bad Request.
      headers:
        X-Request-ID:
          $ref: '#/components/headers/X-Request-ID'
        Content-Type:
          $ref: '#/components/headers/Content-Type'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          examples:
            example-error400InvalidParameters:
              value:
                messages:
                  - code: BAD_REQUEST
                    message: Invalid Parameter
                    type: ERROR
                    description: A parameter has not been provided correctly.
            example-error400MandatoryParameterMissing:
              value:
                messages:
                  - code: BAD_REQUEST
                    message: Mandatory Parameter Mising
                    type: ERROR
                    description: A required parameter has not been provided.
    '401':
      description: Unauthorized.
      headers:
        X-Request-ID:
          $ref: '#/components/headers/X-Request-ID'
        Content-Type:
          $ref: '#/components/headers/Content-Type'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          example:
            messages:
              - code: UNAUTHORIZED
                message: Unauthorized
                type: ERROR
                description: Failure to present credentials correctly.
    '403':
      description: Forbidden.
      headers:
        X-Request-ID:
          $ref: '#/components/headers/X-Request-ID'
        Content-Type:
          $ref: '#/components/headers/Content-Type'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          example:
            messages:
              - code: FORBIDDEN
                message: No permission
                type: ERROR
                description: You do not have the necessary permissions to access the resource.
    '404':
      description: Not found.
      headers:
        X-Request-ID:
          $ref: '#/components/headers/X-Request-ID'
        Content-Type:
          $ref: '#/components/headers/Content-Type'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          example:
            messages:
              - code: NOT_FOUND
                message: Not found
                type: ERROR
                description: The selected resource has not been found.
    '405':
      description: Method Not Allowed.
      headers:
        X-Request-ID:
          $ref: '#/components/headers/X-Request-ID'
        Content-Type:
          $ref: '#/components/headers/Content-Type'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          example:
            messages:
              - code: METHOD_NOT_ALLOWED
                message: Method not allowed
                type: ERROR
                description: The selected method is not supported by this resource.
    '415':
      description: Unsupported Media Type.
      headers:
        X-Request-ID:
          $ref: '#/components/headers/X-Request-ID'
        Content-Type:
          $ref: '#/components/headers/Content-Type'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          example:
            messages:
              - code: UNSUPPORTED_MEDIA_TYPE
                message: Unsupported Media Type
                type: ERROR
                description: The body provided is not in the correct format.
    '422':
      description: Unprocessable Content.
      headers:
        X-Request-ID:
          $ref: '#/components/headers/X-Request-ID'
        Content-Type:
          $ref: '#/components/headers/Content-Type'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          example:
            messages:
              - code: UNPROCESSABLE_ENTITY
                message: Unprocessable Content
                type: ERROR
                description: Entity unprocessable by the server.
    '429':
      description: Too Many Requests.
      headers:
        X-Request-ID:
          $ref: '#/components/headers/X-Request-ID'
        Content-Type:
          $ref: '#/components/headers/Content-Type'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          example:
            messages:
              - code: TOO_MANY_REQUEST
                message: Too Many Requests
                type: ERROR
                description: You have exceeded the maximum number of requests defined.
    '500':
      description: Internal Server Error.
      headers:
        X-Request-ID:
          $ref: '#/components/headers/X-Request-ID'
        Content-Type:
          $ref: '#/components/headers/Content-Type'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          example:
            messages:
              - code: INTERNAL_SERVER_ERROR
                message: Internal Server Error
                type: ERROR
                description: Internal system error.
    200AllDiagnosis:
      description: OK
      headers:
        X-Request-ID:
          $ref: '#/components/headers/X-Request-ID'
        Content-Type:
          $ref: '#/components/headers/Content-Type'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DiagnosisResponse'
          example:
            data:
              - diagnosisId: 1
                patientId: 1
                prevState: LEVE
                date: '2021-01-30'
                state: MODERADO
                comment: Lorem ipsum
              - diagnosisId: 2
                patientId: 1
                prevState: MODERADO
                date: '2021-01-30'
                state: GRAVE
                comment: Tratamiento por Apraxia
